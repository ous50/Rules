rules:
  - RULE-SET,Reject,AdBlock
  - RULE-SET,Special,DIRECT
  - RULE-SET,LAN,DIRECT

  - RULE-SET,Netflix,GlobalTV
  - RULE-SET,Spotify,GlobalTV
  
  # AsianTV
  - RULE-SET,Bilibili,AsianTV
  - RULE-SET,iQiyi,AsianTV
  - RULE-SET,Letv,AsianTV
  - RULE-SET,Netease Music,AsianTV
  - RULE-SET,Tencent Video,AsianTV
  - RULE-SET,WeTV,AsianTV
  - RULE-SET,Youku,AsianTV
  # GlobalTV
  - RULE-SET,ABC,GlobalTV
  - RULE-SET,Abema TV,GlobalTV
  - RULE-SET,Amazon,GlobalTV
  - RULE-SET,Apple News,GlobalTV
  - RULE-SET,Apple TV,GlobalTV
  - RULE-SET,BBC iPlayer,GlobalTV
  - RULE-SET,DAZN,GlobalTV
  - RULE-SET,Discovery Plus,GlobalTV
  - RULE-SET,Disney Plus,GlobalTV
  - RULE-SET,encoreTVB,GlobalTV
  - RULE-SET,Fox Now,GlobalTV
  - RULE-SET,Fox+,GlobalTV
  - RULE-SET,Google,Proxy
  - RULE-SET,HBO,GlobalTV
  - RULE-SET,Hulu,GlobalTV
  - RULE-SET,Japonx,GlobalTV
  - RULE-SET,JOOX,GlobalTV
  - RULE-SET,Line TV,GlobalTV
  - RULE-SET,myTV SUPER,GlobalTV
  - RULE-SET,Niconico,GlobalTV
  - RULE-SET,Pandora,GlobalTV
  - RULE-SET,PBS,GlobalTV
  - RULE-SET,Pornhub,GlobalTV
  - RULE-SET,Soundcloud,GlobalTV
  - RULE-SET,Twitch,GlobalTV
  - RULE-SET,ViuTV,GlobalTV
  - RULE-SET,YouTube,GlobalTV
  # HMTTV
  - RULE-SET,Bahamut,GlobalTV
  - RULE-SET,KKBOX,GlobalTV
  - RULE-SET,KKTV,GlobalTV

  - RULE-SET,Developer,Proxy

  - RULE-SET,Domestic,Domestic
  - RULE-SET,EHantai,Proxy
  - RULE-SET,Google,Proxy
  - RULE-SET,PROXY,Proxy
  - RULE-SET,Scholar,Proxy
  - RULE-SET,Sony,Proxy
  - RULE-SET,Telegram,Proxy

  - RULE-SET,Apple,AppleAndMicrosoft
  - RULE-SET,Microsoft,AppleAndMicrosoft
  - RULE-SET,PayPal,GameAndPayPal
  - RULE-SET,Game,GameAndPayPal

  - RULE-SET,Speedtest,Speedtest

  - GEOIP,CN,Domestic

  - MATCH,Others
script:
  code: |
    def main(ctx, metadata):
        port_list = [21, 22, 23, 53, 80, 123, 143, 194, 443, 465, 587, 853, 993, 995, 998, 2052, 2053, 2082, 2083, 2086, 2095, 2096, 5222, 5228, 5229, 5230, 8080, 8443, 8880, 8888, 8889]
        ruleset_action = {
            "Reject": "AdBlock",
            "Special": "DIRECT",
            "LAN": "DIRECT",

            "Netflix": "GlobalTV",
            "Spotify": "GlobalTV",
            
            "Bilibili": "AsianTV",
            "iQiyi": "AsianTV",
            "Letv": "AsianTV",
            "Netease Music": "AsianTV",
            "Tencent Video": "AsianTV",
            "WeTV": "AsianTV",
            "Youku": "AsianTV",

            "ABC": "GlobalTV",
            "Abema TV": "GlobalTV",
            "Amazon": "GlobalTV",
            "Apple News": "GlobalTV",
            "Apple TV": "GlobalTV",
            "Bahamut": "GlobalTV",
            "BBC iPlayer": "GlobalTV",
            "DAZN": "GlobalTV",
            "Discovery Plus": "GlobalTV",
            "Disney Plus": "GlobalTV",
            "encoreTVB": "GlobalTV",
            "Fox Now": "GlobalTV",
            "Fox+": "GlobalTV",
            "HBO": "GlobalTV",
            "Hulu": "GlobalTV",
            "Japonx": "GlobalTV",
            "JOOX": "GlobalTV",
            "KKBOX": "GlobalTV",
            "KKTV": "GlobalTV",
            "Line TV": "GlobalTV",
            "myTV SUPER": "GlobalTV",
            "Niconico": "GlobalTV",
            "Pandora": "GlobalTV",
            "PBS": "GlobalTV",
            "Pornhub": "GlobalTV",
            "Soundcloud": "GlobalTV",
            "Twitch": "GlobalTV",
            "ViuTV": "GlobalTV",
            "YouTube": "GlobalTV",

            "Developer": "Proxy",
            "EHantai": "Proxy",
            "Google": "Proxy",
            "PROXY": "Proxy",
            "Scholar": "Proxy",
            "Sony": "Proxy",
            "Telegram": "Proxy",

            "Game": "GameAndPayPal",
            "PayPal": "GameAndPayPal",

            "Speedtest": "Speedtest",

            "Microsoft": "AppleAndMicrosoft",
            "Apple": "AppleAndMicrosoft",

            "Domestic": "Domestic"
            
            }
        port = int(metadata["dst_port"])
        if port not in port_list:
            return "DIRECT"
        for rule_name in ctx.rule_providers.keys():
            if ctx.rule_providers[rule_name].match(metadata):
                return ruleset_action[rule_name]
        ip = metadata["dst_ip"] or ctx.resolve_ip(metadata["host"])
        if ip == "":
          return "DIRECT"
        code = ctx.geoip(ip)
        if code == "CN":
          return "Domestic"
        return "Others"
rule-providers:
  ABC:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/ABC
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/ABC.yaml'
  Abema TV:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Abema_TV
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Abema%20TV.yaml'
  Amazon:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Amazon
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Amazon.yaml'
  Apple:
    behavior: classical
    interval: 86400
    path: ./Rules/Apple
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Apple.yaml'
  Apple News:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Apple_News
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Apple%20News.yaml'
  Apple TV:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Apple_TV
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Apple%20TV.yaml'
  BBC iPlayer:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/BBC_iPlayer
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/BBC%20iPlayer.yaml'
  Bahamut:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/HMTTV/Bahamut
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/HMTTV/Bahamut.yaml'
  Bilibili:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/AsianTV/Bilibili
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/AsianTV/Bilibili.yaml'
  DAZN:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/DAZN
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/DAZN.yaml'
  Developer:
    behavior: classical
    interval: 86400
    path: ./Rules/Developer
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Developer.yaml'
  Discovery Plus:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Discovery_Plus
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Discovery%20Plus.yaml'
  Disney Plus:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Disney_Plus
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Disney%20Plus.yaml'
  Domestic:
    behavior: classical
    interval: 86400
    path: ./Rules/Domestic
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Domestic.yaml'
  encoreTVB:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/encoreTVB
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/encoreTVB.yaml'
  EHantai:
    behavior: classical
    interval: 86400
    path: ./Rules/EHantai
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/EHantai.yaml'
  Game:
    behavior: classical
    interval: 86400
    path: ./Rules/Game
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Game.yaml'
  Fox Now:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Fox_Now
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Fox%20Now.yaml'
  Fox+:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Fox+
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Fox%2B.yaml'
  Google:
    behavior: classical
    interval: 86400
    path: ./Rules/Google
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Google.yaml'
  HBO:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/HBO
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/HBO.yaml'
  Hulu:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Hulu
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Hulu.yaml'
  JOOX:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/JOOX
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/JOOX.yaml'
  Japonx:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Japonx
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Japonx.yaml'
  KKBOX:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/HMTTV/KKBOX
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/HMTTV/KKBOX.yaml'
  KKTV:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/HMTTV/KKTV
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/HMTTV/KKTV.yaml'
  LAN:
    behavior: classical
    interval: 86400
    path: ./Rules/LAN
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/LAN.yaml'
  Letv:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/AsianTV/Letv
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/AsianTV/Letv.yaml'
  Line TV:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Line_TV
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Line%20TV.yaml'
  Microsoft:
    behavior: classical
    interval: 86400
    path: ./Rules/Microsoft
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Microsoft.yaml'
  Netease Music:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/AsianTV/Netease_Music
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/AsianTV/Netease%20Music.yaml'
  Netflix:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Netflix
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Netflix.yaml'
  Niconico:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Niconico
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Niconico.yaml'
  PBS:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/PBS
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/PBS.yaml'
  PROXY:
    behavior: classical
    interval: 86400
    path: ./Rules/Proxy
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Proxy.yaml'
  Pandora:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Pandora
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Pandora.yaml'
  PayPal:
    behavior: classical
    interval: 86400
    path: ./Rules/PayPal
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/PayPal.yaml'
  Pornhub:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Pornhub
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Pornhub.yaml'
  Reject:
    behavior: classical
    interval: 86400
    path: ./Rules/Reject
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Reject.yaml'
  Scholar:
    behavior: classical
    interval: 86400
    path: ./Rules/Scholar
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Scholar.yaml'
  Sony:
    behavior: classical
    interval: 86400
    path: ./Rules/Sony
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Sony.yaml'
  Soundcloud:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Soundcloud
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Soundcloud.yaml'
  Special:
    behavior: classical
    interval: 86400
    path: ./Rules/Special
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Special.yaml'
  Speedtest:
    behavior: classical
    interval: 86400
    path: ./Rules/Speedtest
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Speedtest.yaml'
  Spotify:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Spotify
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Spotify.yaml'
  Telegram:
    behavior: classical
    interval: 86400
    path: ./Rules/Telegram
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Telegram.yaml'
  Tencent Video:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/AsianTV/Tencent_Video
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/AsianTV/Tencent%20Video.yaml'
  Twitch:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/Twitch
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/Twitch.yaml'
  ViuTV:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/ViuTV
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/ViuTV.yaml'
  WeTV:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/AsianTV/WeTV
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/AsianTV/WeTV.yaml'
  YouTube:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/YouTube
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/YouTube.yaml'
  Youku:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/AsianTV/Youku
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/AsianTV/Youku.yaml'
  iQiyi:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/AsianTV/iQiyi
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/AsianTV/iQiyi.yaml'
  myTV SUPER:
    behavior: classical
    interval: 86400
    path: ./Rules/Media/GlobalTV/myTV_SUPER
    type: http
    url: 'https://raw.githubusercontent.com/zzcabc/Rules/main/Rules-Complete/Provider/Media/GlobalTV/myTV%20SUPER.yaml'